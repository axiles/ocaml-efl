This is the README file for the ocaml-efl distribution.

An OCaml interface to the Enlightenment Foundation Libraries (EFL).

Homepage: https://forge.ocamlcore.org/projects/ocaml-efl/
Github page: https://github.com/axiles/ocaml-efl

What is OCaml ?
===============

OCaml, originally known as Objective Caml, is the main implementation of the
Caml programming language, created by Xavier Leroy, Jérôme Vouillon, Damien
Doligez, Didier Rémy and others in 1996. OCaml extends the core Caml
language with object-oriented constructs.

OCaml's toolset includes an interactive top level interpreter, a bytecode
compiler, and an optimizing native code compiler. It has a large standard
library that makes it useful for many of the same applications as Python or
Perl, as well as robust modular and object-oriented programming constructs
that make it applicable for large-scale software engineering. OCaml is the
successor to Caml Light. The acronym CAML originally stood for Categorical
Abstract Machine Language, although OCaml abandons this abstract machine.

OCaml is a free open source project managed and principally maintained by
INRIA.

Homepage: http://caml.inria.fr/index.en.html

What are the Enlightenment Foundation Libraries (EFL) ?
=======================================================

The Enlightenment Foundation Libraries (EFL) are a set of open source
graphics libraries that grew out of the development of the Enlightenment
window manager. The project's focus is to make the EFL a flexible yet powerful
and easy to use set of tools to extend the capabilities of both the
Enlightenment window manager and other software projects based on the EFL. The
libraries were created for version 0.17 of the window manager. The libraries are
meant to be portable and optimized to be functional even on devices such as
PDAs.

Homepage: http://www.enlightenment.org/

INSTALLING
==========

This package uses OASIS to generate its build system. You can find more
detailed instructions in the INSTALL file.

LICENSE
=======

This is a free software licensed under the zlib/png license. More information
is available in the COPYING file.

CURRENT STATE OF THE INTERFACE
==============================

Currently, only a small portion of the EFL has been interfaced. Our primary
efforts are in interfacing Elementary (the high-level widget part of the EFL).
The following widgets and containers are almost fully implemented:

* windows
* buttons
* text entries
* boxes
* check boxes
* radio buttons
* separators
* images
* icons
* backgrounds
* notifications
* layouts
* inwins
* file selectors
* simple lists
* menus
* naviframes
* scrollers
* simple grids
* generic lists
* action sliders
* bubbles
* progressbars
* frames
* sliders
* conformants
* panes
* tables
* file selector buttons
* file selector entries
* hoversels
* hovers
* spinners
* popups
* contextual popups
* flips
* flip selectors
* panels
* tooltips
* thumbnails

It is already possible to write some small GUI applications with these widgets.
However, ocaml-efl is still in alpha stage and some API may break.

The last version can be obtained here: https://github.com/axiles/ocaml-efl

You may also want to contribute by adding missing functions that you want. The
following pages might give you information about how to do it:

http://www.linux-nantes.org/~fmonnier/ocaml/ocaml-wrapping-c.php
http://caml.inria.fr/pub/docs/manual-ocaml-4.00/manual033.html

USING THIS LIBRARY
==================

This library can easily be used with the findlib (ocamlfind) package 'efl'.

For example, if you have a single-file program main.ml, you can build it by
entering:

'ocamlbuild -use-ocamlfind -pkg efl main.byte'

And then, you can execute it by entering:

'./main.byte'

If you want to compile to native code, just replace 'main.byte' by
'main.native'.

Findlib homepage: http://projects.camlcity.org/projects/findlib.html
Ocamlbuild homepage: http://brion.inria.fr/gallium/index.php/Ocamlbuild

