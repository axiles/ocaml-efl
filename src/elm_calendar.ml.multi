include Henums.Elm_calendar

type mark

type selectable_ = {year : bool; month : bool; day : bool}

module AF = Autofun.Elm_calendar.F (struct
  type evas_object = Evas.obj
  type elm_calendar_weekday = weekday
  type elm_calendar_selectable_list = selectable list
  type elm_calendar_selectable_ = selectable_
  type elm_calendar_select_mode = select_mode
  type elm_calendar_mark = mark
end)
include AF

external add : Evas.obj -> Evas.obj = "ml_elm_calendar_add"

let addx = Elm_object.create_addx add

external weekdays_names_get : Evas.obj -> string array =
  "ml_elm_calendar_weekdays_names_get"

external weekdays_names_set : Evas.obj -> string array -> unit =
  "ml_elm_calendar_weekdays_names_set"

external min_max_year_get : Evas.obj -> int * int =
  "ml_elm_calendar_min_max_year_get"

external displayed_time_get : Evas.obj -> Unix.tm option =
  "ml_elm_calendar_displayed_time_get"

external selected_time_set : Evas.obj -> Unix.tm -> unit =
  "ml_elm_calendar_selected_time_set"

external selected_time_get : Evas.obj -> Unix.tm option =
  "ml_elm_calendar_selected_time_get"

external mark_add : Evas.obj -> string -> Unix.tm -> mark_repeat_type -> mark =
  "ml_elm_calendar_mark_add"

external marks_get : Evas.obj -> mark list = "ml_elm_calendar_marks_get"

(* BEGIN: 1.19 *)
external date_min_set : Evas.obj -> Unix.tm -> unit =
  "ml_elm_calendar_date_min_set"

external date_min_get : Evas.obj -> Unix.tm =
  "ml_elm_calendar_date_min_get"

external date_max_set : Evas.obj -> Unix.tm -> unit =
  "ml_elm_calendar_date_max_set"

external date_max_get : Evas.obj -> Unix.tm =
  "ml_elm_calendar_date_max_get"
(* END *)

