#include "include.h"

Eina_Bool ml_Elm_Naviframe_Item_Pop_Cb(void* data, Elm_Object_Item* it)
{
        CAMLparam0();
        CAMLlocal1(v_it);
        value* v_fun = data;
        v_it = copy_Elm_Object_Item(it);
        Eina_Bool b = Bool_val(caml_callback(*v_fun, v_it));
        CAMLreturnT(Eina_Bool, b);
}

PREFIX value ml_elm_naviframe_add(value v_parent)
{
        Evas_Object* obj = elm_naviframe_add(Evas_Object_val(v_parent));
        if(obj == NULL) caml_failwith("elm_naviframe_add");
        return copy_Evas_Object(obj);
}

PREFIX value ml_elm_naviframe_item_push_native(
        value v_obj, value v_title_label, value v_prev_btn, value v_next_btn,
        value v_content, value v_item_style, value v_unit CAMLunused)
{
        Evas_Object *prev_btn, *next_btn;
        if(v_prev_btn == Val_int(0)) prev_btn = NULL;
        else prev_btn = Evas_Object_val(Field(v_prev_btn, 0));
        if(v_next_btn == Val_int(0)) next_btn = NULL;
        else next_btn = Evas_Object_val(Field(v_next_btn, 0));
        char const *title_label, *item_style;
        if(v_title_label == Val_int(0)) title_label = NULL;
        else title_label = String_val(Field(v_title_label, 0));
        if(v_item_style == Val_int(0)) item_style = NULL;
        else item_style = String_val(Field(v_item_style, 0));
        Elm_Object_Item* item = elm_naviframe_item_push(Evas_Object_val(v_obj),
                title_label, prev_btn, next_btn, Evas_Object_val(v_content),
                item_style);
        if(item == NULL) caml_failwith("elm_naviframe_item_push");
        return copy_Elm_Object_Item(item);
}

PREFIX value ml_elm_naviframe_item_push_byte(value* argv, int argn CAMLunused)
{
        return ml_elm_naviframe_item_push_native(argv[0], argv[1], argv[2],
                argv[3], argv[4], argv[5], argv[6]);
}

PREFIX value ml_elm_naviframe_item_insert_before_native(
        value v_obj, value v_before, value v_title_label, value v_prev_btn,
        value v_next_btn, value v_content, value v_item_style, value v_unit CAMLunused)
{
        Evas_Object *prev_btn, *next_btn;
        if(v_prev_btn == Val_int(0)) prev_btn = NULL;
        else prev_btn = Evas_Object_val(Field(v_prev_btn, 0));
        if(v_next_btn == Val_int(0)) next_btn = NULL;
        else next_btn = Evas_Object_val(Field(v_next_btn, 0));
        char const *title_label, *item_style;
        if(v_title_label == Val_int(0)) title_label = NULL;
        else title_label = String_val(Field(v_title_label, 0));
        if(v_item_style == Val_int(0)) item_style = NULL;
        else item_style = String_val(Field(v_item_style, 0));
        Elm_Object_Item* item = elm_naviframe_item_insert_before(
                Evas_Object_val(v_obj), Elm_Object_Item_val(v_before),
                title_label, prev_btn, next_btn, Evas_Object_val(v_content),
                item_style);
        if(item == NULL) caml_failwith("elm_naviframe_item_insert_before");
        return copy_Elm_Object_Item(item);
}
        
PREFIX value ml_elm_naviframe_item_insert_before_byte(value* argv, int argn CAMLunused)
{
        return ml_elm_naviframe_item_insert_before_native(argv[0], argv[1],
                argv[2], argv[3], argv[4], argv[5], argv[6], argv[7]);
}

PREFIX value ml_elm_naviframe_item_insert_after_native(
        value v_obj, value v_after, value v_title_label, value v_prev_btn,
        value v_next_btn, value v_content, value v_item_style, value v_unit CAMLunused)
{
        Evas_Object *prev_btn, *next_btn;
        if(v_prev_btn == Val_int(0)) prev_btn = NULL;
        else prev_btn = Evas_Object_val(Field(v_prev_btn, 0));
        if(v_next_btn == Val_int(0)) next_btn = NULL;
        else next_btn = Evas_Object_val(Field(v_next_btn, 0));
        char const *title_label, *item_style;
        if(v_title_label == Val_int(0)) title_label = NULL;
        else title_label = String_val(Field(v_title_label, 0));
        if(v_item_style == Val_int(0)) item_style = NULL;
        else item_style = String_val(Field(v_item_style, 0));
        Elm_Object_Item* item = elm_naviframe_item_insert_after(
                Evas_Object_val(v_obj), Elm_Object_Item_val(v_after),
                title_label, prev_btn, next_btn, Evas_Object_val(v_content),
                item_style);
        if(item == NULL) caml_failwith("elm_naviframe_item_insert_after");
        return copy_Elm_Object_Item(item);
}
        
PREFIX value ml_elm_naviframe_item_insert_after_byte(value* argv, int argn CAMLunused)
{
        return ml_elm_naviframe_item_insert_after_native(argv[0], argv[1],
                argv[2], argv[3], argv[4], argv[5], argv[6], argv[7]);
}

PREFIX value ml_elm_naviframe_item_pop(value v_obj)
{
        Evas_Object* top = elm_naviframe_item_pop(Evas_Object_val(v_obj));
        return copy_Evas_Object_opt(top);
}

PREFIX value ml_elm_naviframe_item_pop_to(value v_it)
{
        elm_naviframe_item_pop_to(Elm_Object_Item_val(v_it));
        return Val_unit;
}

PREFIX value ml_elm_naviframe_item_promote(value v_it)
{
        elm_naviframe_item_promote(Elm_Object_Item_val(v_it));
        return Val_unit;
}

PREFIX value ml_elm_naviframe_content_preserve_on_pop_set(
        value v_obj, value v_flag)
{
        elm_naviframe_content_preserve_on_pop_set(Evas_Object_val(v_obj),
                Eina_Bool_val(v_flag));
        return Val_unit;
}

PREFIX value ml_elm_naviframe_content_preserve_on_pop_get(value v_obj)
{
        return Val_Eina_Bool(elm_naviframe_content_preserve_on_pop_get(
        Evas_Object_val(v_obj)));
}

PREFIX value ml_elm_naviframe_top_item_get(value v_obj)
{
        Elm_Object_Item* it = elm_naviframe_top_item_get(
                Evas_Object_val(v_obj));
        return copy_Elm_Object_Item_opt(it);
}

PREFIX value ml_elm_naviframe_bottom_item_get(value v_obj)
{
        Elm_Object_Item* it = elm_naviframe_bottom_item_get(
                Evas_Object_val(v_obj));
        return copy_Elm_Object_Item_opt(it);
}

PREFIX value ml_elm_naviframe_item_style_set(value v_it, value v_style)
{
        const char* style;
        if(v_style == Val_int(0)) style = NULL;
        else style = String_val(Field(v_style, 0));
        elm_naviframe_item_style_set(Elm_Object_Item_val(v_it), style);
        return Val_unit;
}

PREFIX value ml_elm_naviframe_item_style_get(value v_it)
{
        return copy_string(elm_naviframe_item_style_get(
                Elm_Object_Item_val(v_it)));
}

PREFIX value ml_elm_naviframe_item_title_enabled_set(
        value v_it, value v_visible, value v_trans)
{
        elm_naviframe_item_title_enabled_set(Elm_Object_Item_val(v_it),
                Bool_val(v_visible), Bool_val(v_trans));
        return Val_unit;
}

PREFIX value ml_elm_naviframe_item_title_enabled_get(value v_it)
{
        return Val_Eina_Bool(elm_naviframe_item_title_enabled_get(
                Elm_Object_Item_val(v_it)));
}

PREFIX value ml_elm_naviframe_item_pop_cb_set(value v_it, value v_fun)
{
        CAMLparam2(v_it, v_fun);
        Elm_Object_Item* it = Elm_Object_Item_val(v_it);
        value* data = ml_Elm_Object_Item_register_value(it, v_fun);
        elm_naviframe_item_pop_cb_set(it, ml_Elm_Naviframe_Item_Pop_Cb, data);
        CAMLreturn(Val_unit);
}

PREFIX value ml_elm_naviframe_prev_btn_auto_pushed_set(value v_obj, value v_flag)
{
        elm_naviframe_prev_btn_auto_pushed_set(Evas_Object_val(v_obj),
                Eina_Bool_val(v_flag));
        return Val_unit;
}

PREFIX value ml_elm_naviframe_prev_btn_auto_pushed_get(value v_obj)
{
        return Val_Eina_Bool(elm_naviframe_prev_btn_auto_pushed_get(
                Evas_Object_val(v_obj)));
}

PREFIX value ml_elm_naviframe_items_get(value v_obj)
{
        Eina_List* list = elm_naviframe_items_get(Evas_Object_val(v_obj));
        value v_list = copy_Eina_List_Elm_Object_Item(list);
        eina_list_free(list);
        return v_list;
}

PREFIX value ml_elm_naviframe_event_enabled_set(value v_obj, value v_flag)
{
        elm_naviframe_event_enabled_set(Evas_Object_val(v_obj),
                Eina_Bool_val(v_flag));
        return Val_unit;
}

PREFIX value ml_elm_naviframe_event_enabled_get(value v_obj)
{
        return Val_Eina_Bool(elm_naviframe_event_enabled_get(
                Evas_Object_val(v_obj)));
}

PREFIX value ml_elm_naviframe_item_simple_promote(value v_obj, value v_content)
{
        elm_naviframe_item_simple_promote(Evas_Object_val(v_obj),
                Evas_Object_val(v_content));
        return Val_unit;
}

PREFIX value ml_elm_naviframe_item_simple_push(value v_obj, value v_content)
{
        Elm_Object_Item* it = elm_naviframe_item_simple_push(
                Evas_Object_val(v_obj), Evas_Object_val(v_content));
        if(it == NULL) caml_failwith("elm_naviframe_item_simple_push");
        return copy_Elm_Object_Item(it);
}

